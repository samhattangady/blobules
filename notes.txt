13 Jun 2020
So yeah just a place for some notes. Would need to set up vimwiki here as
well to make sure the things are alright. Apart from that I think its largely
all good.

Umm, now the game has been set up on windows as well, so that is good I
assume. Would have to set up some of the vimrc stuff here as well, but should
be fairly straightforward for the most part I guess.

Okay, in terms of plan of action, I'm not sure what I should work on next. I
remember the "priority was to get a working overall structure of the program
in place, which essentilly means that we need to set up the main menu as well
as the


Okay, yeah, so I need to start implementing the main menu stuff right? I think
I should start off with that immediately?

14 Jun 2020
Okay, again, really need to spend some time and just start putting the work in
really. (Narrator: And then he spent the next 4 hours on Youtube ¯\_(?)_/¯ )

Alright so main menu. I think lets do that. Actually fps.

So one thing that we currently have is that the ui.c file is what does the text
rendering. There are two things that we can do in order to do the menu rendering
Either we give the simple renderer some functionality to do text rendering as well,
call into ui.c from the renderer. Yeah I think those are the two options that we
have. I think we should start off with using the existing ui.c code. 

Actually, anyway we are going to have to rewrite large,
no, use it as it is right now. Let's see what we can do later.

Yeah, alright, implemented the whole menu functionality. (Narrator: yeah
"WHOLE FUNCTIONALITY")
There's a bit more to be done there, but for the most part, I think the
structure is good.

Alright. I guess we could work on the level select screen next? Since the idea
that I do have is the node based idea, we should prototype some simple version
of that I guess.

15 Jun 2020
Agian, I can feel the laziness creeping in, and honestly, it doesn't feel so
super, I do have to admit. I need to figure out some mechanism that allows me
to circumvent this same thought spiral.

Largely, I think I really need to get used to the idea that this is _all_
about delayed gratification. I think at some level I am just not able to
appreciate that to a large enough extent, and that is the cause of the
constant distractions and all the other rubbish.

Okay, we also have to figure out how to store and load the levels then right?
It might be quite a bit of a hassle to do it all in text files. But I guess we
still should be doing that in any case? At least whike starting off. Later on,
we can probably move on to make some sort of toolset that would allow us to do
that. But that's later right. Right now we only need to implement the simplest
version of that. And I think that everything that we need to have in that
version has already been covered in the level_select_struct.

17 Jun 2020
So yeah, I think that one of the things that I really need to work on is to
get really into the whole develpmnet stuff. So I _know_ that when I really get
into it, I enjoy the process, but everyday, I'd just much rather be dreaming
about getting successful amd all the interviews and podcasts that Id do and
rubbish, but never about actually doing the actual deed. So that's fairly
annoying atleast right now. And even just then, I go out and start watching
some more fucking youtube,,,

Okay, so whats the next step really? I think it must be implementing the level
select screen right? Yeah, that makes sense right now.

19 Jun 2020
Okay, so I need to do some work today. But to be honest, I'm _really_ happy
with the progress over the past few days. Sure, it doesn't really look/seem
like much, but sortwed out all the weird issues, like the flickering and
things. And yeah, I think that's definitely a good thing. So I think the next
thing we should probably be working on is getting sound effects into the game?
I think that may be kinda important.

So okay, I guess some of the things that we need to really get into the game
would have to be the sounds and the animations. The animation system is
something that we would have to really figure out from scratch almost I guess.
Sounds should just be mostly adding some sort of sound controller I guess

APart from that I am just thinking what else really needs to be done. I may be
missing some very basic elements, but at this point in time, I really am not
sure what those would be.
Maybe I could also spend some time on the visual elements of the whole thing.
Specifically, a grayscale "implementation" of all the elements to get a decent
grasp of what is really necessary to be developed, and secondly, a demo of
what we want the main character to look like, with all the shader work and all
of that done as well. I think if we can start getting all of that done, it
would definitely be ideal.

20 Jun 2020
Okay, so what should I be aiming to get done today? I played a demo of the
monster expedition game, and that looked kinda cool. It has a few more
elements that I do, but honestly, not exactly looking to compete I don't
think. So yeah, I think honestly, we are *way* behind on the artwork. I have
all the tools required now also, so no real good excuses anymore I don't think

Okay. Spend some time on the artwork now then.

22 Jun 2020
So I think at some point, I reverted to drawing the sprites from the bottom
left corner. Actually, we should be drawing them from the center so that the
stuff gets easily overlapped whatever aaaaaa,.
Now I think I remember why I would have switched to the bottom left version.
It was because we wanted to draw sprites that were 2 units tall, and in that
case the corners would be different
Okay, so what are the important things that need to be worked on right now?
I'm just trying to get a grasp on that. So we need the better ground tile
selection stuff. Then the actual krita processing scripts. Some animation
rendering stuff? Okay, pick one and get to work. I think the krita script is
the important one. Until we get that, working on the other stuff would require
a bunch of busywork, which I'm not so keen on doing really.

23 Jun 2020
Okay, what should I be working on today? I somehow managed to get the stuff
set up with krita and all yesterday. It's an annoyance, but it works for now I
guess, and maybe at some point in the future we will have to do a _lot_ of
work with it, but atleast for now, I think we can happily move on.

But the real quesion, is, move on to what?
Hmm. There is the ground and slippery rendering that will need some amount of
work. That would be worth working on. Apart from that, the animation stuff
definitely. Otherwise there is the screen shifting. The input handling. The
sounds. Oh man there are honestly so many things that would need to be done
wow.

Okay took care of the input stuff. Really interesting solution if you ask me.
So now on to the ground rendering I think. Actually the slippery ice
rendering. So I think we actually have some data for that? I mean we have a
"material" index that we pass. No reason why we can't improve on that. Or
atleast, use that to figure out which sprite should be drawn. So I did the
calculations yesterday. I figure I will need 22 sprites to represent all of
the possibilities. Maybe it's just 17 then... Î

24 Jun 2020
Okay, I don't really know what to work on next... Maybe the island/ground
stuff? But I just spent a bunch of time on the yesterday, so not too keen on
doing that again today. Apart from that maybe the sounds? Yeah I haven't done
anything with the sounds. Also, I think we need to get away from the idea that
only some of the things will be animated. As long as it's not NONE it should
have an animation entry so that we can fade that stuff in as neccessary?

25 Jun 2020
Man the audio stuff is actually really complex. I'm struggling to get a decent
grasp of how it all works. So lets spend some more time in doing that today.
Always remember that the reason that you're really doing all of this is to
really learn stuff. Sure, audio is complex, but so was gl when we started off,
and look at us now. Cool? Cool. oKAY. sTOP WITH THE YOUTIBE THEN i GIESS?
Aaaah man. I spent a lot of time on it yesterday. And I'm a little scared to
jump back in today man. Damn.

Maybe I should move to something else and then come back to this later.
There's no real point in dreading the thing for the rest of my life. Might as
well move on and see how the other things pan out.

Okay, there are two things that I need to work on, one is the slides that
delete an object end up just disappearing. That might be quite a deep issue.
Because when you think about the way the renderer works right now, if the
thing is not in the world, then we don't know that we have to draw it. I think
it is reaching a point where we need to start drawing things not from the
entities object. Might be a bit of a refactor, but I think it makes sense to
start moving in that direction, especially now that we see all the issues that
it has been throwing up.

The other major problem that still has to be resolve is the ground getting
animated as the ice passes over it. Now that I think about it, I think doing
the previous step will take care of this as well.

Oh man, I've not spent any time on this section of the code in so long, that I
really don't even remember all the things that are happening exactly, and I
don't think my current approach of just randomly fiddling around over there
makes all that much sense. Maybe I should be sitting and doing it "correctly",
but then again who do you think I am?

Okay, so O have the set up the animation data to have the z index as well. But
I don't really know how the depth buffer stuff would work. I think that's the
biggest thing that I don't really know how to do. Also, maybe it's time to
rethink the whole animation_struct stuff. Now that we're going to be moving to
animated sprites, maybe it isn't the best idea to continue using the same
basic interpolation stuff. Okay, but what exactly do we need to do in order to
redesign that stuff?

Okay. So the system that I would like definitely probably includes some kind
of depth buffer testing. So if I want to do passes over the rendering, then
having support for a much larger vertex buffer and a depth buffer sensitive
graphics api would be very useful. My biggest concern right now is the way
that we are writing to the buffer may mean that we might have an annoying task
of including the data for the vertex buffer / edpth.

Okay, I think we really need to introduce some kind of entity index that
stores the positions of the entities as well. The biggest issue really would
be in keeping that in sync with the grid data. But to be completely honest,
we're already kinda struggling with that in some sense. Maybe we can do that
once, and then update all entities based on their grid positions every frame
before we render? I think that could actually work out decently well for us.
Hmm... Interesting;

26 Jun 2020
Oh yeah, bunch of work was completed today. So I have the ice sliding off the
map correctly now. WIll have to implement that for all the other objects as
well, but that should be fairly straightforward. About the ice, I really don't
have any good ideas as to how I want it to look. Maybe make it such that when
the cube is completely over a block that's when it shifts, but the
surroindiung stuff with still look kinda bad there. I wonder what the best
move to make in that situation is really.

Apart from that, ofcourse there is the sounds. Damn that's going to be hard I
fear. So yeah. There's the animations as well. And also the whole level select
screen. I need to put some amount of thought into that as well. I think
because I have a very abstract idea of what I want, and I don't know what's
the best thing...

27 Jun 2020
So what should we be working on today? A little unclear. We can sit and do the
falling animation? Also at some point we will have to rework the sprite
rendering as once we get animated sprites, they will likely be wider than a
single block, and at that point we might want to have a smarter use of the
spritesheet. When I say smarter, I guess what I really mean is more
traditional method. ¯\_(?)_/¯. Haha. I somehow always manage to procrastinate.
For some reason, when I make a batch script to copy to clipboard, it doesn't
properly paste in vim.  <shrug>.
But I think that will come later, once I have some of the stuff prepared. For
now, it doesn't make sense to die over that. Also the falling animation, I
think, for now we can just set scale and try that and see if it works.

Okay, so now that I think about it, we actually have to add a bit of
functionality. Apart from just the interpolation, we also have to have the
ability to queue up the animations. That would be required if we want multiple
animations to play on "demand". And we *definitely* need that. That's how the
mouse will slide and then hit a wall or whatever. I am wondering whether we
need to update what the animation struct would look like. Radically at that.

For some reason I can't use SHIFT+BACKSPACE on windows in vim. So fucking
annoying. Okay now I have shifted to gVim. It might be a little more
comfortable. SOme of the tab changing shortcuts still work, so thats nice. But
for the most part it's just more procrastination if we're being completely
honest.

Okay, now back to the point. We were trying to figure out how we are going to
structure tha animation data so that it supports the things that we want it to
support. Basically, it should allow for queued animations. Which means that
there needs to be some kind of list. And then we have to pop the top of the
list to get the next item, and stuff like that. So the list itself would also
need to contain some stuff. But what?

Aargh. Now I remember why I was procrastinating instead of working. This
decision seems like it is really hard, and I'd much rather do something else
that sit and make this work. But the truth is that once I get into it, I know
that I will actively enjoy working on it. I don't know why I can't actually
get into it. But I must sit here at the lap of the teacher, and be obedient,
and eventually, I will reap my rewards.

So umm, what we really need in these scenarios is basically a . What I'm
really trying to think about is whether the best way to do this is to use a
list of some sort, or whether we can have a more clever way of doing this. Or
no. A list is probably the simplest way to approach the problem.

So I really think that I need to separate out the animations from the
movement. Basically the animation just needs to have a series of frames, where
as the motion is separate entrirely. So I think I can just convert the
animation state to motion state or something like that for now. I also have to
figure out how to not always move the items linearly. Actually, maybe I can do
that right now, and see how that works out.

Yup, that was fairly straightforward for the most part. Now back to the actual
task that we had to do? If you don't mind? And lunch break? lunch break.
Bloody

Yeah, so the ease in out works. How do we do the other stuffs though. Start
off with the easy shit. Rename it to be movement state or some rubbish like
that. Alright. Easy shit done. Now one issue for the animations is that I
don't really have any sprites to work with as such. Okay so now what was the
hard stuff that we had to work on? Maybe start trying to work on audio again?
That honestly makes sense. We should have a lot more time today to actually
put the work in and see if things work out.

Okay wow I got it. I had made a pretty stupid mistake if I'm being honest. I
had simply assumed that the decoder could be reused. Now that I created
multiple decoders, it's all woking fine. Cool. The next step is probably to
figure out how the device is supposed to know that it's done (so that we can
figure out how to actually implement that into the game? Sure makes sense.)

where did he come from where did he go?
where did he come from cotton eye joe?

Okay, so I think the way that miniaudio works just clicked for me right now,
and I am in kind of a funny headspace. There is so much excitement at all the
ideas of how the boombox can be implemented, but also there seems to be a
sense of dread. Okay not dread, but at least resistance. I think it's because
right now, in this moment, it's all in my head, and it's perfect, and it's
exciting. But once I start actually implementing it, then all the
imperfections and annoyances will start to arise. So yeah there is that. But
anyway, I think actually recognising the feeling for what it is will help get
me over the bump.
